# Generated by Django 4.2.23 on 2025-09-15 20:41

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("categories", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="Listing",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(help_text="Listing title", max_length=200)),
                (
                    "slug",
                    models.SlugField(
                        blank=True,
                        help_text="SEO-friendly URL for this listing",
                        max_length=220,
                        unique=True,
                    ),
                ),
                (
                    "description",
                    models.TextField(help_text="Detailed description of the listing"),
                ),
                (
                    "listing_type",
                    models.CharField(
                        choices=[
                            ("sell", "For Sale"),
                            ("rent", "For Rent"),
                            ("lease", "For Lease"),
                            ("service", "Service"),
                        ],
                        help_text="Type of listing",
                        max_length=10,
                    ),
                ),
                (
                    "price",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text='Price (leave blank for "Contact for price")',
                        max_digits=12,
                        null=True,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "currency",
                    models.CharField(
                        default="NGN",
                        help_text="Currency code (NGN for Naira)",
                        max_length=3,
                    ),
                ),
                (
                    "price_unit",
                    models.CharField(
                        blank=True,
                        help_text="Price unit (e.g., per day, per hour, per unit)",
                        max_length=20,
                    ),
                ),
                (
                    "negotiable",
                    models.BooleanField(
                        default=False, help_text="Whether price is negotiable"
                    ),
                ),
                (
                    "location",
                    models.CharField(
                        help_text="Equipment/service location", max_length=200
                    ),
                ),
                (
                    "country",
                    models.CharField(blank=True, help_text="Country", max_length=100),
                ),
                (
                    "state_province",
                    models.CharField(
                        blank=True, help_text="State or province", max_length=100
                    ),
                ),
                (
                    "city",
                    models.CharField(blank=True, help_text="City", max_length=100),
                ),
                (
                    "contact_name",
                    models.CharField(help_text="Contact person name", max_length=100),
                ),
                (
                    "contact_email",
                    models.EmailField(help_text="Contact email", max_length=254),
                ),
                (
                    "contact_phone",
                    models.CharField(
                        blank=True, help_text="Contact phone number", max_length=20
                    ),
                ),
                (
                    "manufacturer",
                    models.CharField(
                        blank=True, help_text="Equipment manufacturer", max_length=100
                    ),
                ),
                (
                    "model",
                    models.CharField(
                        blank=True, help_text="Equipment model", max_length=100
                    ),
                ),
                (
                    "year",
                    models.PositiveIntegerField(
                        blank=True, help_text="Manufacturing year", null=True
                    ),
                ),
                (
                    "condition",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("new", "New"),
                            ("excellent", "Excellent"),
                            ("good", "Good"),
                            ("fair", "Fair"),
                            ("poor", "Poor"),
                        ],
                        help_text="Equipment condition",
                        max_length=20,
                    ),
                ),
                (
                    "service_area",
                    models.CharField(
                        blank=True, help_text="Service coverage area", max_length=200
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("draft", "Draft"),
                            ("published", "Published"),
                            ("archived", "Archived"),
                            ("flagged", "Flagged"),
                            ("suspended", "Suspended"),
                        ],
                        default="draft",
                        help_text="Listing status",
                        max_length=20,
                    ),
                ),
                (
                    "featured",
                    models.BooleanField(
                        default=False, help_text="Whether this is a featured listing"
                    ),
                ),
                (
                    "views_count",
                    models.PositiveIntegerField(
                        default=0, help_text="Number of times viewed"
                    ),
                ),
                (
                    "inquiries_count",
                    models.PositiveIntegerField(
                        default=0, help_text="Number of inquiries received"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("published_at", models.DateTimeField(blank=True, null=True)),
                (
                    "expires_at",
                    models.DateTimeField(
                        blank=True, help_text="Listing expiration date", null=True
                    ),
                ),
                (
                    "category",
                    models.ForeignKey(
                        help_text="Listing category",
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="listings",
                        to="categories.category",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        help_text="Listing owner",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="listings",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Listing",
                "verbose_name_plural": "Listings",
                "db_table": "listings",
                "ordering": ["-created_at"],
                "indexes": [
                    models.Index(
                        fields=["status", "-created_at"],
                        name="listings_status_174ca4_idx",
                    ),
                    models.Index(
                        fields=["category", "status"],
                        name="listings_categor_7f7673_idx",
                    ),
                    models.Index(
                        fields=["listing_type", "status"],
                        name="listings_listing_56bbe5_idx",
                    ),
                    models.Index(
                        fields=["location"], name="listings_locatio_406a4a_idx"
                    ),
                    models.Index(
                        fields=["-published_at"], name="listings_publish_33af56_idx"
                    ),
                    models.Index(
                        fields=["user", "status"], name="listings_user_id_9bd273_idx"
                    ),
                    models.Index(
                        fields=["country", "state_province", "city"],
                        name="listings_country_72b56d_idx",
                    ),
                ],
            },
        ),
    ]
